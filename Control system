#include <AccelStepper.h> // dodaje biblioteke AccelStepper
#include <Servo.h> // dodaje biblioteke sterujaca serwomechanizmem


Servo myservo;  // tworzy objekt servo do kontroli serwomechanizmu 

#define button1 A5 //definiowanie przycisków odpowiedzialnych za sterownie silnikiem
#define button2 A4
#define button3 A3
#define button4 A2
#define button5 A1
#define button6 11
#define button A0 //definiowanie pinu odpowiedzialnego za zczytywanie wartości zadanej potencjometru


//pierwszy silnik
#define dirPin1 2 //zdefiniowanie pinu odpowiedzialnego za kierunek obrotu silnika
#define stepPin1 3 //zdefiniowanie pinu odpowiedzialnego za krok silnika
#define motorInterfaceType 1 //przypisanie silnika jako modelu w bibliotece

//drugi silnik
#define dirPin2 6
#define stepPin2 7

//trzeci silnik
#define dirPin3 8
#define stepPin3 9

//dodanie silników jako obiektów do biblioteki Accel
AccelStepper stepper1 = AccelStepper(motorInterfaceType, stepPin1, dirPin1);
AccelStepper stepper2 = AccelStepper(motorInterfaceType, stepPin2, dirPin2);
AccelStepper stepper3 = AccelStepper(motorInterfaceType, stepPin3, dirPin3);

int poser = 0; // wstepna pozycja serwomechanizmu
int val; // wstępna wartosc wielkosci zadanej
void setup() {

  Serial.begin(9600); // Określenie predkosci transmisji tzw. ,,baud-rate''
  ser.attach(5);// polaczenie serwomechanizmu do pinu nr. 5

  stepper1.setMaxSpeed(1000); //Ustawienie maksymalnej prędkości obrotowej silnika
  stepper1.setAcceleration(50); //Ustawienie maksymalnego przyspieszenia silnika
  stepper1.setSpeed(200); //Ustawienie prędkości obrotowej silnika
  stepper1.setCurrentPosition(0); //Ustawienie wstępnej pozycji silnika


  stepper2.setMaxSpeed(1000);
  stepper2.setAcceleration(50);
  stepper2.setSpeed(200);
  stepper2.setCurrentPosition(0);

  stepper3.setMaxSpeed(1000);
  stepper3.setAcceleration(50);
  stepper3.setSpeed(200);
  stepper3.setCurrentPosition(0);
  
  pinMode(button1, INPUT_PULLUP); //ustawienie przycisków w funkcję INPUT_PULLUP
  pinMode(button2, INPUT_PULLUP);
  pinMode(button3, INPUT_PULLUP);
  pinMode(button4, INPUT_PULLUP);
  pinMode(button5, INPUT_PULLUP);
  pinMode(button6, INPUT_PULLUP);
}

void loop() {

  if (Serial.available()) // jezeli liczba bitow jest mozliwa do pobrania

  {
    //silnik pierwszy, oś Z, obroty do gory
     if (buttonState1 == LOW) 
    {
      stepper1.setCurrentPosition(stepper1.currentPosition() + 1); //inkrementacja biezacej pozycji silnika
      stepper1.moveTo(stepper1.currentPosition());
      stepper1.run();
      Serial.println(stepper1.currentPosition());
      delay(15);


    }

    //silnik pierwszy, oś Z, obroty do dolu

     if (buttonState2 == LOW) 
    {
      stepper1.setCurrentPosition(stepper1.currentPosition() - 1); //dekrementacja biezacej pozycji silnika
      stepper1.moveTo(stepper1.currentPosition());
      stepper1.run();
      Serial.println(stepper1.currentPosition());
      delay(15);

    }

    //silnik drugi, obroty w lewo

      if (buttonState3 == LOW) 
    {
      stepper2.setCurrentPosition(stepper2.currentPosition() - 1);
      stepper2.moveTo(stepper2.currentPosition());
      stepper2.run();
      Serial.println(stepper2.currentPosition());
      delay(15);


    }

    //silnik drugi, obroty w prawo

     if (buttonState4 == LOW) 
    {
      stepper2.setCurrentPosition(stepper2.currentPosition() + 1);
      stepper2.moveTo(stepper2.currentPosition());
      stepper2.run();
      Serial.println(stepper2.currentPosition());
      delay(15);

    }

    //silnik trzeci, obroty w lewo
    if (buttonState5 == LOW) 
    {
      stepper3.setCurrentPosition(stepper3.currentPosition() - 1);
      stepper3.moveTo(stepper3.currentPosition());
      stepper3.run();
      Serial.println(stepper3.currentPosition());
      delay(15);

    }

    //silnik trzeci, obroty w prawo
    if (buttonState6 == LOW) 
    {
      stepper3.setCurrentPosition(stepper3.currentPosition() + 1);
      stepper3.moveTo(stepper3.currentPosition());
      stepper3.run();
      Serial.println(stepper3.currentPosition());
      delay(15);

    }

     for(pos = 0; pos <= 180; pos += 1) // obrót od 0 do 180 stopni 
  {                                  // w krokach co 1 stopień
    myservo.write(pos);              // przekazanie do serwa obrotu o tyle ile jest zapisane w zmiennej 'pos'
    delay(15);                       // poczekaj 15ms, aby serwo osiągnęło ustaloną pozycje
  } 
  for(pos = 180; pos>=0; pos-=1)     // obrót od 180 do 0 stopni 
  {                                
    myservo.write(pos);              // przekazanie do serwa obrotu o tyle ile jest zapisane w zmiennej 'pos'
    delay(15);                       // poczekaj 15ms, aby serwo osiągnęło ustaloną pozycje
  } 

   
  }

}
